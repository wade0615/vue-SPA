# Vue-SPA 環境建置教學文件

## 前言

【對Vue寫測試系列】
會出現這系列文是因為要對 Vue 寫測試，所以技能樹才強迫升級的啦～

### 目錄
技能關鍵字：
npm
WebPack
vue-cli
vue-loader
vue-SPA

## npm

首先要先有 npm 的環境：
`npm init -y`

## WebPack

[webpack官網](https://webpack.docschina.org/)

我們需要 WebPack 幫我們打包轉譯整個我們開發用的 JS
`npm install webpack webpack-cli --save-dev`

### 手動建立一個針對 WebPack 的設定檔

`touch webpack.config.js`

在內部設定為：
```
const path = require('path');

module.exports = {
    entry: "./app.js", //引入的檔案

    output: {
        path: path.resolve(__dirname, './dist'), //輸出的路徑
        filename: "build.js" //輸出的檔名
    }
}
```

### 在 package.json 的 "script" 裡放入

`"build": "webpack --config webpack.config.js"`

這樣之後只要輸入 `npm run build`
他就會執行設定檔 `webpack.config.js` 裡面的東西了

## vue/cli

[官網介紹](https://cli.vuejs.org/zh/guide/)

CLI (@vue/cli)是一個針對 Vue 的 npm 套件管理工具，提供了終端裡的vue命令。對 Babel、TypeScript、ESLint、PostCSS、PWA、單元測試、E2E測試提供立刻的支援。

`npm install @vue/cli @vue/cli-service-global`

如果你要在全域安裝，你可能需要

`sodu npm install -g @vue/cli @vue/cli-service-global`

它提供了很多以 `vue` 開頭的終端機裡的命令
個人目前常用 `vue serve app.vue` 在開發環境模式下為 app.js 或 app.vue 文件啟動一個 server
按 ctrl C 離開

## vue-loader

[官網介紹](https://vue-loader.vuejs.org/zh/#vue-loader-%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F)

Vue Loader 是一個 webpack 的 loader，它允許我們以一種名為單文件組件(SFCs)的格式撰寫Vue組件
> SFC 就是 Single File Components，就是 SPA - Single Page Application

`npm install -D vue-loader vue-template-compiler`

如果你對為何要裝 `vue-template-compiler` 有疑惑，看看[這個](https://vue-loader.vuejs.org/zh/guide/#vue-cli):
![](https://i.imgur.com/Cqq1uMF.png)

在 webpack.config.js 中新增：
```
// webpack.config.js
const VueLoaderPlugin = require('vue-loader/lib/plugin')

module.exports = {
  module: {
    rules: [
      // ... 其他規則
      {
        test: /\.vue$/,
        loader: 'vue-loader'
      }
    ]
  },
  plugins: [
    // 請確保引入這個插件！
    new VueLoaderPlugin()
  ]
}
```
## 建立檔案

到這邊為止環境算是建置完了，你的結構應該長這樣：
![](https://i.imgur.com/BF2I89l.png)

webpack.config.js 裡面應該長這樣：
![](https://i.imgur.com/FqJfWQX.png)

接下來我們來建立我們的其他檔案吧～
`touch index.html`
`mkdir components`
`cd components`
`touch index.js`
`touch app.vue`

所以會長的像：
![](https://i.imgur.com/8lk9aQF.png)


## vue-SPA

[官網介紹](https://vue-loader.vuejs.org/zh/spec.html)

來編輯 `app.vue` 吧～先放進一點簡單的範例程式：

```
<template>
  <div class="example">{{ msg }}</div>
</template>

<script>
export default {
  data () {
    return {
      msg: 'Hello world!'
    }
  }
}
</script>

<style>
.example {
  color: red;
}
</style>
```
在 webpack.config.js 中新增：
```
// webpack.config.js

module.exports = {
  module: {
    rules: [
      // ... 其它规则
      {
        test: /\.css$/,
        use: [
          'vue-style-loader',
          'css-loader'
        ]
      }
    ]
  }
}
```
整個變成：
![](https://i.imgur.com/hiJhldi.png)

## 編輯其他檔案

### 編輯 index.js

輸入 index.js：
```
import app from './app.vue'

Vue.config.productionTip = false //阻止啟動生產訊息

new Vue({
    el: '#vue_spa',
    template: 
    `<div>
        <app></app>
    </div>`,
    components: { app } //這邊要跟你 import 進來時宣告的變數一樣
})
```

### 先跑一次 Webpack

這時候先 run 一次 webpack，讓 webpack 幫我們產生 `_dist_` 跟 `buid.js`

`npm run build`

我們的目錄底下應該會多一個 `_dist_` 的資料夾，裡面有一個 `build.js` 的檔案
![](https://i.imgur.com/igatSgu.png)

這個 build.js 就是 webpack 幫我們把 index.js 裡面，所有我們用的開發用的ＪＳ語法，像是commonJS的語法（require）、ES6的語法(const)、.vue 的 component 等等，轉譯成瀏覽器知道的ＪＳ，讓瀏覽器可以運行。

### 編輯 index.html

主要就是在 body 新增這三個：
```
//這是我們在 index.js 裡指定要使用 vue 的 element id
<div id="vue_spa"></div>

//引入 vue CDN
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

//引入 Webpack 幫我們轉譯過的 build.js
<script src="./dist/build.js"></script>
```

### 大功告成

點開 index.html 應該就會有類似這樣的畫面了喔：

![](https://i.imgur.com/68A5U3d.png)

之後有任何的變更都記得要再執行 `npm run build` 更新 webPack 整理的 `build.js` 喔！
